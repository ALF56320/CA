Fonctions de l'interpréteur de commandes
Comme d'autres langages de programmation, le shell peut avoir des fonctions. Une fonction est un sous-programme qui implémente un ensemble de commandes et d'opérations.
Il est utile pour les tâches répétitives.

# basic construct
function function_name {
  command...
}
Les fonctions sont appelées simplement en écrivant leurs noms. Un appel de fonction est équivalent à une commande. Les paramètres peuvent être passés à une fonction,
en les spécifiant après le nom de la fonction. Le premier paramètre est appelé $1 dans la fonction, le second $2 etc.

function function_B {
  echo "Function B."
}
function function_A {
  echo "$1"
}
function adder {
  echo "$(($1 + $2))"
}

# FUNCTION CALLS
# Pass parameter to function A
function_A "Function A."     # Function A.
function_B                   # Function B.
# Pass two parameters to function adder
adder 12 56                  # 68
Exercer
Dans cet exercice, vous devrez écrire une fonction appelée ENGLISH_CALC qui peut traiter des phrases telles que :

'3 plus 5', '5 moins 1' ou '4 fois 6' et imprimez les résultats sous la forme : '3 + 5 = 8', '5 - 1 = 4' ou '4 * 6 = 24' respectivement.
----------------------------------------------------------------------------------------------------------------------------------------------
function ENGLISH_CALC



---------------------------------------------------------------------------------------------------------------
#!/bin/bash
# enter your function code here

function ENGLISH_CALC {
  a=$1
  b=$3
  signn=$2
  if [ $signn == "plus" ]; then
    echo "$a + $b = $(($a+$b))"
  elif [ $signn == "minus" ]; then
    echo "$a - $b = $(($a-$b))"
  elif [ $signn == "times" ]; then
    echo "$a * $b = $(($a*$b))"
  fi
}

# testing code
ENGLISH_CALC 3 plus 5
ENGLISH_CALC 5 minus 1
ENGLISH_CALC 4 times 6

